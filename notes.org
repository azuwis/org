* Notes

** SystemD manage tmp files

systemd-tmpfiles /usr/lib/tmpfiles.d

* Bookmarks

** [[http://shapecatcher.com/][Shapecatcher: Draw the Unicode character you want!]] :unicode:symbol:
:PROPERTIES:
:CREATED: [2015-07-09 Thu 17:13]
:END:

And let shapecatcher help you to find the most similar unicode characters!

** [[https://github.com/theonewolf/TermRecord][theonewolf/TermRecord]] :terminal:
:PROPERTIES:
:CREATED: [2015-07-09 Thu 17:20]
:END:

Terminal session recorder that outputs self-contained HTML

** [[https://www.yworks.com/en/products/yfiles/yed/][yEd - Graph Editor]]
:PROPERTIES:
:CREATED: [2015-07-10 Fri 17:37]
:END:

yEd is a powerful desktop application that can be used to quickly and
effectively generate high-quality diagrams.

** [[https://lttng.org/][LTTng: an open source tracing framework for Linux]] :performance:
:PROPERTIES:
:CREATED: [2015-07-12 Sun 16:06]
:END:

** [[https://github.com/akiradeveloper/dm-writeboost/blob/master/doc/dm-writeboost-readme.txt][dm-writeboost/dm-writeboost-readme.txt at master · akiradeveloper/dm-writeboost]] :kernel:disk:cache:
:PROPERTIES:
:CREATED: [2015-07-12 Sun 21:57]
:END:

dm-writeboost target provides block-level log-structured caching. All cache
data, writes and reads, are written to the cache device in sequential manner.

dm-writeboost controls three different layers - RAM buffer (rambuf), cache
device (cache_dev, e.g SSD) and backing device (backing_dev, e.g. HDD). All data
are first stored in the RAM buffer and when the RAM buffer is full,
dm-writeboost adds metadata block (with checksum) on the RAM buffer to create a
"log". Afterward, the log is written to the cache device as background
processing in sequential manner and thereafter it's written back to the backing
device in background as well.

** [[http://prometheus.io/][Prometheus]] :monitoring:
:PROPERTIES:
:CREATED: [2015-07-12 Sun 22:47]
:END:

An open-source service monitoring system and time series database.

** [[http://artofmonitoring.com/][The Art of Monitoring]]
:PROPERTIES:
:CREATED: [2015-07-13 Mon 17:15]
:END:

A simple hands-on introductory book on the art of modern infrastructure
monitoring and metrics.

** [[https://conemu.github.io/][ConEmu - Handy Windows Terminal]] :windows:
:PROPERTIES:
:CREATED: [2015-07-14 Tue 16:59]
:END:

ConEmu-Maximus5 is a Windows console emulator with tabs, which presents multiple
consoles and simple GUI applications as one customizable GUI window with various
features.

** [[https://babun.github.io/][Babun - a windows shell you will love!]]
:PROPERTIES:
:CREATED: [2015-07-15 Wed 15:07]
:END:

** [[http://forums.debian.net/viewtopic.php?f%3D10&t%3D122188][GRUB menu disappeared after booting Windows 8.1]]
:PROPERTIES:
:CREATED: [2015-07-15 Wed 15:37]
:END:

#+BEGIN_SRC 
bcdedit /set {bootmgr} path \EFI\debian\grubx64.efi
#+END_SRC

** [[https://landscape.io/][Landscape :: Hosted continuous Python code metrics]]
:PROPERTIES:
:CREATED: [2015-07-20 Mon 09:56]
:END:

Landscape is an early warning system for your Python codebase

** [[https://code.google.com/p/firmware-mod-kit/][firmware-mod-kit - Modify firmware images without recompiling! - Google Project Hosting]]
:PROPERTIES:
:CREATED: [2015-08-12 Wed 10:04]
:END:

This kit is a collection of scripts and utilities to extract and rebuild linux based firmware images.

** [[https://icomoon.io/][Icon Font & SVG Icon Sets ❍ IcoMoon]]
:PROPERTIES:
:CREATED: [2015-08-20 Thu 09:56]
:END:

Custom built and crisp icon fonts, done right

** [[https://dba.stackexchange.com/questions/27328/how-large-should-be-mysql-innodb-buffer-pool-size][innodb - How large should be mysql innodb_buffer_pool_size? - Database Administrators Stack Exchange]] :mysql:
:PROPERTIES:
:CREATED: [2015-09-16 Wed 17:38]
:END:

Here is what you should do. First run this query

SELECT CEILING(Total_InnoDB_Bytes*1.6/POWER(1024,3)) RIBPS FROM
(SELECT SUM(data_length+index_length) Total_InnoDB_Bytes
FROM information_schema.tables WHERE engine='InnoDB') A;

This will give you the RIBPS, Recommended InnoDB Buffer Pool Size based on all InnoDB Data and Indexes with an additional 60%.

For Example

mysql>     SELECT CEILING(Total_InnoDB_Bytes*1.6/POWER(1024,3)) RIBPS FROM
    ->     (SELECT SUM(data_length+index_length) Total_InnoDB_Bytes
    ->     FROM information_schema.tables WHERE engine='InnoDB') A;
+-------+
| RIBPS |
+-------+
|     8 |
+-------+
1 row in set (4.31 sec)

mysql>

With this output, you would set the following in /etc/my.cnf

[mysqld]
innodb_buffer_pool_size=8G

Next, service mysql restart

After the restart, run mysql for a week or two. Then, run this query:

SELECT (PagesData*PageSize)/POWER(1024,3) DataGB FROM
(SELECT variable_value PagesData
FROM information_schema.global_status
WHERE variable_name='Innodb_buffer_pool_pages_data') A,
(SELECT variable_value PageSize
FROM information_schema.global_status
WHERE variable_name='Innodb_page_size') B;

This will give you how many actual pages of InnoDB data reside in the InnoDB Buffer Pool.

** [[https://leucos.github.io/articles/transparent-vault-revisited/][Transparent encryption with ansible vault revisited – Random stuff]]
:PROPERTIES:
:CREATED: [2015-10-08 Thu 11:04]
:END:

** [[https://wiki.debian.org/SystemdSuspendSedation][SystemdSuspendSedation - Debian Wiki]]
:PROPERTIES:
:CREATED: [2015-12-28 Mon 17:10]
:END:

This page explains how to have a laptop first Suspend to RAM then after a some time save state to disk and power off completely.
